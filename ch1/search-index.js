var searchIndex = new Map(JSON.parse('[\
["os",{"doc":"The main module and entrypoint","t":"HCCCQQHCFNNNNHNNNNHFNNNNNHNNNNNHHH","n":["clear_bss","console","lang_items","logging","print","println","rust_main","sbi","Stdout","borrow","borrow_mut","from","into","print","try_from","try_into","type_id","write_str","panic","SimpleLogger","borrow","borrow_mut","enabled","flush","from","init","into","log","try_from","try_into","type_id","console_getchar","console_putchar","shutdown"],"q":[[0,"os"],[8,"os::console"],[18,"os::lang_items"],[19,"os::logging"],[31,"os::sbi"],[34,"core::fmt"],[35,"core::result"],[36,"core::any"],[37,"core::fmt"],[38,"log"],[39,"log"]],"d":["clear BSS segment","SBI console driver, for text output","The panic handler","","print string macro","println string macro","the rust entry-point of os","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","use sbi call to getchar from console (qemu uart handler)","use sbi call to putchar in console (qemu uart handler)","use sbi call to shutdown the kernel"],"i":[0,0,0,0,0,0,0,0,0,6,6,6,6,0,6,6,6,6,0,0,10,10,10,10,10,0,10,10,10,10,10,0,0,0],"f":"{{}b}`````{{}d}``{ce{}{}}0{cc{}}1{fb}{c{{h{e}}}{}{}}0{cj{}}{{ln}A`}{Abd}`66{{AdAf}Ah}{Adb}7:8{{AdAj}b}665{{}Al}{Alb}{Ahd}","c":[],"p":[[1,"unit"],[1,"never"],[5,"Arguments",34],[6,"Result",35],[5,"TypeId",36],[5,"Stdout",8],[1,"str"],[8,"Result",34],[5,"PanicInfo",37],[5,"SimpleLogger",19],[5,"Metadata",38],[1,"bool"],[5,"Record",38],[1,"usize"]],"b":[]}]\
]'));
if (typeof exports !== 'undefined') exports.searchIndex = searchIndex;
else if (window.initSearch) window.initSearch(searchIndex);
